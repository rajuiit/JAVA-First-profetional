
import Database.DBConnection;
import Database.Settings;
import java.awt.event.ItemEvent;
import javax.swing.JOptionPane;
import java.util.Random;
import java.util.Calendar;
import java.sql.*;
import saleProduct.recieptIF;
import saleProduct.recieptIF1;


/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * saleProductFrame.java
 *
 * Created on May 24, 2012, 1:23:07 PM
 */
/**
 *
 * @author Sayed Mahmud Reza
 */
public class returnSaleProductFrame extends javax.swing.JFrame {

    /** Creates new form saleProductFrame */
    public returnSaleProductFrame() {

        initComponents();
        LoadUserames();
        Random randomNumbers = new Random();
        this.setSize(Settings.getScreenSize().width, Settings.getScreenSize().height - 30);
        int memo = 112233 + randomNumbers.nextInt(199999);
        String memoString = String.valueOf(memo);
        memoTextField.setText(memoString);
        Calendar dateTime = Calendar.getInstance();
        dateTextField.setText(String.valueOf(dateTime.getTime()));



        //delete reciept
deletereciept();
//      
//        //delete memoReciept
//        try {
//                    Connection con = DBConnection.getDBConnection();
//            Statement st = con.createStatement();
//
//            try {
//                    String str2 = "delete * from MemoReciept";
//                   st.executeUpdate(str2);
//                 
//                    //pso.executeUpdate();
//                    
//                    
//                   // JOptionPane.showMessageDialog(null, "Database successfully updated", "Success", JOptionPane.INFORMATION_MESSAGE);
//                 con.close();
//                    
//            } catch (Exception x) {
//                JOptionPane.showMessageDialog(null, "Error,Unable to perform database operation", "Error", JOptionPane.ERROR_MESSAGE);
//            }//inner try catch closed
//        } catch (Exception ex) {
//            JOptionPane.showMessageDialog(null, "Error on database connection, Cannot perform database operation", "Error", JOptionPane.ERROR_MESSAGE);
//        }//outer try catch closed
        //actionPerformed() closed


    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        popupMenu1 = new java.awt.PopupMenu();
        jDesktopPane1 = new javax.swing.JDesktopPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        serialNoTextField1 = new javax.swing.JTextField();
        serialNoTextField2 = new javax.swing.JTextField();
        serialNoTextField3 = new javax.swing.JTextField();
        serialNoTextField4 = new javax.swing.JTextField();
        serialNoTextField5 = new javax.swing.JTextField();
        proName1TextField = new javax.swing.JTextField();
        proName2TextField = new javax.swing.JTextField();
        proName3TextField = new javax.swing.JTextField();
        proName4TextField = new javax.swing.JTextField();
        proName5TextField = new javax.swing.JTextField();
        proPrice1TextField = new javax.swing.JTextField();
        proPrice2TextField = new javax.swing.JTextField();
        proPrice3TextField = new javax.swing.JTextField();
        proPrice4TextField = new javax.swing.JTextField();
        proPrice5TextField = new javax.swing.JTextField();
        totalAmount1TextField = new javax.swing.JTextField();
        totalAmount2TextField = new javax.swing.JTextField();
        totalAmount3TextField = new javax.swing.JTextField();
        totalAmount4TextField = new javax.swing.JTextField();
        totalAmount5TextField = new javax.swing.JTextField();
        pro1ComboBox = new javax.swing.JComboBox();
        pro2ComboBox = new javax.swing.JComboBox();
        pro3ComboBox = new javax.swing.JComboBox();
        pro4ComboBox = new javax.swing.JComboBox();
        pro5ComboBox = new javax.swing.JComboBox();
        withoutVatTextField = new javax.swing.JTextField();
        vatTextField = new javax.swing.JTextField();
        withVatTextField = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        quantity1TextField = new javax.swing.JTextField();
        quantity2TextField = new javax.swing.JTextField();
        quantity3TextField = new javax.swing.JTextField();
        quantity4TextField = new javax.swing.JTextField();
        quantity5TextField = new javax.swing.JTextField();
        withoutVatButton = new javax.swing.JButton();
        vatButton = new javax.swing.JButton();
        withVatButton = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        customerNameTextField = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        memoTextField = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        findButton = new javax.swing.JButton();
        jLabel18 = new javax.swing.JLabel();
        checkMemoTextField = new javax.swing.JTextField();
        dateTextField = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        newButton = new javax.swing.JButton();
        showRecieptButton = new javax.swing.JButton();
        saveUpdateButton = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        backHomeMenuItem = new javax.swing.JMenuItem();
        exitMenuItem = new javax.swing.JMenuItem();
        jMenu1 = new javax.swing.JMenu();
        backMenuItem = new javax.swing.JMenuItem();
        toolsMenu = new javax.swing.JMenu();
        calculatorMenuItem = new javax.swing.JMenuItem();
        notePadMenuItem = new javax.swing.JMenuItem();
        helpMenu = new javax.swing.JMenu();
        aboutMenuItem = new javax.swing.JMenuItem();

        popupMenu1.setLabel("popupMenu1");
        popupMenu1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                popupMenu1ActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Proshanti Computer Ltd.");

        jDesktopPane1.setBackground(new java.awt.Color(240, 240, 240));
        jDesktopPane1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel1.setText("Serial No.");

        jLabel2.setText("Product ID");

        jLabel3.setText("Product Name");

        jLabel4.setText("Quantity");

        jLabel5.setText("Total Amount");

        serialNoTextField1.setEditable(false);
        serialNoTextField1.setText("1");

        serialNoTextField2.setEditable(false);
        serialNoTextField2.setText("2");

        serialNoTextField3.setEditable(false);
        serialNoTextField3.setText("3");

        serialNoTextField4.setEditable(false);
        serialNoTextField4.setText("4");

        serialNoTextField5.setEditable(false);
        serialNoTextField5.setText("5");

        proName1TextField.setEditable(false);

        proName2TextField.setEditable(false);

        proName3TextField.setEditable(false);

        proName4TextField.setEditable(false);

        proName5TextField.setEditable(false);

        proPrice1TextField.setEditable(false);
        proPrice1TextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                proPrice1TextFieldActionPerformed(evt);
            }
        });

        proPrice2TextField.setEditable(false);

        proPrice3TextField.setEditable(false);

        proPrice4TextField.setEditable(false);

        proPrice5TextField.setEditable(false);

        totalAmount1TextField.setEditable(false);
        totalAmount1TextField.setText("0");

        totalAmount2TextField.setEditable(false);
        totalAmount2TextField.setText("0");

        totalAmount3TextField.setEditable(false);
        totalAmount3TextField.setText("0");

        totalAmount4TextField.setEditable(false);
        totalAmount4TextField.setText("0");

        totalAmount5TextField.setEditable(false);
        totalAmount5TextField.setText("0");

        pro1ComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "None", "Pro 101", "Pro 201", "Pro 301", "Pro 401", "Pro 501", "Pro 601", "Pro 701", "Pro 801", "Pro 901", "Pro 1001" }));
        pro1ComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                pro1ComboBoxItemStateChanged(evt);
            }
        });
        pro1ComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pro1ComboBoxActionPerformed(evt);
            }
        });

        pro2ComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "None", "Pro 101", "Pro 201", "Pro 301", "Pro 401", "Pro 501", "Pro 601", "Pro 701", "Pro 801", "Pro 901", "Pro 1001" }));
        pro2ComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                pro2ComboBoxItemStateChanged(evt);
            }
        });

        pro3ComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "None", "Pro 101", "Pro 201", "Pro 301", "Pro 401", "Pro 501", "Pro 601", "Pro 701", "Pro 801", "Pro 901", "Pro 1001" }));
        pro3ComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                pro3ComboBoxItemStateChanged(evt);
            }
        });

        pro4ComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "None", "Pro 101", "Pro 201", "Pro 301", "Pro 401", "Pro 501", "Pro 601", "Pro 701", "Pro 801", "Pro 901", "Pro 1001" }));
        pro4ComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                pro4ComboBoxItemStateChanged(evt);
            }
        });

        pro5ComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "None", "Pro 101", "Pro 201", "Pro 301", "Pro 401", "Pro 501", "Pro 601", "Pro 701", "Pro 801", "Pro 901", "Pro 1001" }));
        pro5ComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                pro5ComboBoxItemStateChanged(evt);
            }
        });

        withoutVatTextField.setEditable(false);

        vatTextField.setEditable(false);
        vatTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vatTextFieldActionPerformed(evt);
            }
        });

        withVatTextField.setEditable(false);

        jLabel6.setText("Total Ammount(without less):");

        jLabel7.setText("Less(25%):");

        jLabel8.setText("Total Ammount(With Less):");

        jLabel9.setText("=");

        jLabel10.setText("=");

        jLabel11.setText("=");

        jLabel12.setText("=");

        jLabel13.setText("=");

        jLabel14.setText("Product Price");

        quantity1TextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quantity1TextFieldActionPerformed(evt);
            }
        });
        quantity1TextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                quantity1TextFieldKeyReleased(evt);
            }
        });

        quantity2TextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quantity2TextFieldActionPerformed(evt);
            }
        });
        quantity2TextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                quantity2TextFieldKeyReleased(evt);
            }
        });

        quantity3TextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quantity3TextFieldActionPerformed(evt);
            }
        });
        quantity3TextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                quantity3TextFieldKeyReleased(evt);
            }
        });

        quantity4TextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quantity4TextFieldActionPerformed(evt);
            }
        });
        quantity4TextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                quantity4TextFieldKeyReleased(evt);
            }
        });

        quantity5TextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quantity5TextFieldActionPerformed(evt);
            }
        });
        quantity5TextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                quantity5TextFieldKeyReleased(evt);
            }
        });

        withoutVatButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/update.png"))); // NOI18N
        withoutVatButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                withoutVatButtonActionPerformed(evt);
            }
        });

        vatButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/update.png"))); // NOI18N
        vatButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vatButtonActionPerformed(evt);
            }
        });

        withVatButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/update.png"))); // NOI18N
        withVatButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                withVatButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(serialNoTextField5, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(serialNoTextField4, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(serialNoTextField3, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(serialNoTextField2, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(serialNoTextField1, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(jLabel2)
                        .addGap(69, 69, 69))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pro1ComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pro5ComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pro2ComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pro3ComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pro4ComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(proName2TextField, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(proPrice2TextField, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 84, Short.MAX_VALUE)
                        .addComponent(quantity2TextField, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel10)
                        .addGap(18, 18, 18)
                        .addComponent(totalAmount2TextField, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(proName3TextField, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(proPrice3TextField, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 84, Short.MAX_VALUE)
                        .addComponent(quantity3TextField, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel11)
                        .addGap(18, 18, 18)
                        .addComponent(totalAmount3TextField, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(proName4TextField, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(proPrice4TextField, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(proName5TextField, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 56, Short.MAX_VALUE)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING)))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(proPrice5TextField, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(proName1TextField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(8, 8, 8)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(proPrice1TextField, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel14))
                                .addGap(19, 19, 19)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(vatTextField)
                            .addComponent(withoutVatTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 172, Short.MAX_VALUE)
                            .addComponent(withVatTextField)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(quantity5TextField, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel13)
                                .addGap(18, 18, 18)
                                .addComponent(totalAmount5TextField, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(quantity4TextField, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel12)
                                .addGap(18, 18, 18)
                                .addComponent(totalAmount4TextField, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(quantity1TextField, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel9)
                                .addGap(18, 18, 18)
                                .addComponent(totalAmount1TextField, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel5)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(withoutVatButton)
                    .addComponent(withVatButton)
                    .addComponent(vatButton))
                .addGap(146, 146, 146))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel5)
                    .addComponent(jLabel14)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(serialNoTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(proName1TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(totalAmount1TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pro1ComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(proPrice1TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(quantity1TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(serialNoTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(proName2TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(proPrice2TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(totalAmount2TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pro2ComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addComponent(quantity2TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(serialNoTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(proName3TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(proPrice3TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(totalAmount3TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pro3ComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11)
                    .addComponent(quantity3TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(serialNoTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(proName4TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(proPrice4TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(totalAmount4TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pro4ComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12)
                    .addComponent(quantity4TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(serialNoTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(totalAmount5TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pro5ComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(proName5TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(proPrice5TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13)
                    .addComponent(quantity5TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(withoutVatTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(withoutVatButton))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(vatButton)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(vatTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel7)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(withVatTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel8))
                    .addComponent(withVatButton, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap(62, Short.MAX_VALUE))
        );

        jPanel1.setBounds(160, 130, 1010, 400);
        jDesktopPane1.add(jPanel1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        customerNameTextField.setEditable(false);
        customerNameTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                customerNameTextFieldActionPerformed(evt);
            }
        });

        jLabel19.setText("Customer Name:");

        memoTextField.setEditable(false);

        jLabel16.setText("Memo No.");

        findButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/view.png"))); // NOI18N
        findButton.setText("Find");
        findButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                findButtonActionPerformed(evt);
            }
        });

        jLabel18.setText("Check the given Memo No:");

        dateTextField.setEditable(false);

        jLabel17.setText("Date & Time:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel18)
                    .addComponent(jLabel16))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(memoTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(checkMemoTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(4, 4, 4)
                        .addComponent(findButton)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 165, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel19)
                    .addComponent(jLabel17))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(customerNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(findButton)
                    .addComponent(jLabel18)
                    .addComponent(checkMemoTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17)
                    .addComponent(dateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(memoTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16)
                    .addComponent(customerNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        jPanel2.setBounds(160, 20, 1010, 100);
        jDesktopPane1.add(jPanel2, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        newButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/newreg.png"))); // NOI18N
        newButton.setText("New");
        newButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newButtonActionPerformed(evt);
            }
        });

        showRecieptButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/newreg.png"))); // NOI18N
        showRecieptButton.setText("Show Receipt");
        showRecieptButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showRecieptButtonActionPerformed(evt);
            }
        });

        saveUpdateButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/update.png"))); // NOI18N
        saveUpdateButton.setText("Save & Update");
        saveUpdateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveUpdateButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(488, Short.MAX_VALUE)
                .addComponent(newButton)
                .addGap(31, 31, 31)
                .addComponent(showRecieptButton)
                .addGap(18, 18, 18)
                .addComponent(saveUpdateButton)
                .addGap(146, 146, 146))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(showRecieptButton)
                    .addComponent(newButton)
                    .addComponent(saveUpdateButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBounds(160, 540, 1010, 60);
        jDesktopPane1.add(jPanel3, javax.swing.JLayeredPane.DEFAULT_LAYER);

        fileMenu.setText("File");

        backHomeMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_H, java.awt.event.InputEvent.ALT_MASK));
        backHomeMenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/backover.jpg"))); // NOI18N
        backHomeMenuItem.setText("Back to Home Page");
        backHomeMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backHomeMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(backHomeMenuItem);

        exitMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_X, java.awt.event.InputEvent.ALT_MASK));
        exitMenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/close.png"))); // NOI18N
        exitMenuItem.setText("Exit");
        exitMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(exitMenuItem);

        jMenuBar1.add(fileMenu);

        jMenu1.setText("Edit");

        backMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_P, java.awt.event.InputEvent.ALT_MASK));
        backMenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/backover.jpg"))); // NOI18N
        backMenuItem.setText("Back");
        backMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backMenuItemActionPerformed(evt);
            }
        });
        jMenu1.add(backMenuItem);

        jMenuBar1.add(jMenu1);

        toolsMenu.setText("Tools");

        calculatorMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.CTRL_MASK));
        calculatorMenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/calc.png"))); // NOI18N
        calculatorMenuItem.setText("Calculator");
        calculatorMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calculatorMenuItemActionPerformed(evt);
            }
        });
        toolsMenu.add(calculatorMenuItem);

        notePadMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        notePadMenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/notepad.png"))); // NOI18N
        notePadMenuItem.setText("NotePad");
        notePadMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                notePadMenuItemActionPerformed(evt);
            }
        });
        toolsMenu.add(notePadMenuItem);

        jMenuBar1.add(toolsMenu);

        helpMenu.setText("Help");

        aboutMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F1, java.awt.event.InputEvent.ALT_MASK));
        aboutMenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/editusr.png"))); // NOI18N
        aboutMenuItem.setText("About");
        aboutMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aboutMenuItemActionPerformed(evt);
            }
        });
        helpMenu.add(aboutMenuItem);

        jMenuBar1.add(helpMenu);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jDesktopPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1283, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jDesktopPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 628, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void exitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuItemActionPerformed
        System.exit(0);        // TODO add your handling code here:
}//GEN-LAST:event_exitMenuItemActionPerformed

    private void backMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backMenuItemActionPerformed
        this.setVisible(false);
        Menu menu = new Menu();
        menu.setVisible(true);        // TODO add your handling code here:
}//GEN-LAST:event_backMenuItemActionPerformed

    private void pro1ComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pro1ComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pro1ComboBoxActionPerformed

    private void aboutMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aboutMenuItemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_aboutMenuItemActionPerformed

    private void pro1ComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_pro1ComboBoxItemStateChanged

//String[] proName = {null,"Monitor","Sound Box","Mouse","Keyboard","UPS","Mother Board","Processor","RAM 4GB","HArd Disk 500GB","Modem"};
//String[] proPrice = {null,"7800","17800","800","1800","3300","12000","9800","5600","10000","1500"};
//if(evt.getStateChange() == ItemEvent.SELECTED){
//    proName1TextField.setText( proName[pro1ComboBox.getSelectedIndex()]);
//proPrice1TextField.setText( proPrice[pro1ComboBox.getSelectedIndex()]);

        if (evt.getStateChange() == ItemEvent.SELECTED) {
            // int index = pro1ComboBox.getSelectedIndex();
            String name = (String) pro1ComboBox.getSelectedItem();
            //JOptionPane.showMessageDialog(null, index, name, JOptionPane.ERROR_MESSAGE);
            if (name == "None") {
                proName1TextField.setText("");
                proPrice1TextField.setText("");

            } else {
                try {
                    Connection con = DBConnection.getDBConnection();
                    Statement st = con.createStatement();

                    ResultSet rs = st.executeQuery("SELECT * from stock where `Product Id`= '" + name + "'");

                    while (rs.next()) {
                        proName1TextField.setText(rs.getString(2));
                        proPrice1TextField.setText(rs.getString(4));


                    }




                } catch (Exception e) {
                }
            }
        }




// TODO add your handling code here:
    }//GEN-LAST:event_pro1ComboBoxItemStateChanged

    private void pro2ComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_pro2ComboBoxItemStateChanged
//    String[] proName = {null,"Monitor","Sound Box","Mouse","Keyboard","UPS","Mother Board","Processor","RAM 4GB","HArd Disk 500GB","Modem"};
//String[] proPrice = {null,"7800","17800","800","1800","3300","12000","9800","5600","10000","1500"};
//if(evt.getStateChange() == ItemEvent.SELECTED){
//    proName2TextField.setText( proName[pro2ComboBox.getSelectedIndex()]);
//proPrice2TextField.setText( proPrice[pro2ComboBox.getSelectedIndex()]);


        // TODO add your handling code here:
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            // int index = pro1ComboBox.getSelectedIndex();
            String name = (String) pro2ComboBox.getSelectedItem();
            //JOptionPane.showMessageDialog(null, index, name, JOptionPane.ERROR_MESSAGE);
            if (name == "None") {
                proName2TextField.setText("");
                proPrice2TextField.setText("");

            } else {
                try {
                    Connection con = DBConnection.getDBConnection();
                    Statement st = con.createStatement();
                    ResultSet rs = st.executeQuery("SELECT * from stock where `Product Id`= '" + name + "'");

                    while (rs.next()) {
                        proName2TextField.setText(rs.getString(2));
                        proPrice2TextField.setText(rs.getString(4));


                    }




                } catch (Exception e) {
                }
            }
        }

    }//GEN-LAST:event_pro2ComboBoxItemStateChanged

    private void pro3ComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_pro3ComboBoxItemStateChanged
//String[] proName = {null,"Monitor","Sound Box","Mouse","Keyboard","UPS","Mother Board","Processor","RAM 4GB","HArd Disk 500GB","Modem"};
//String[] proPrice = {null,"7800","17800","800","1800","3300","12000","9800","5600","10000","1500"};
//if(evt.getStateChange() == ItemEvent.SELECTED){
//    proName3TextField.setText( proName[pro3ComboBox.getSelectedIndex()]);
//proPrice3TextField.setText( proPrice[pro3ComboBox.getSelectedIndex()]);
//
//
//        }        // TODO add your handling code here:

        if (evt.getStateChange() == ItemEvent.SELECTED) {
            // int index = pro1ComboBox.getSelectedIndex();
            String name = (String) pro3ComboBox.getSelectedItem();
            //JOptionPane.showMessageDialog(null, index, name, JOptionPane.ERROR_MESSAGE);
            if (name == "None") {
                proName3TextField.setText("");
                proPrice3TextField.setText("");

            } else {
                try {
                    Statement st = Settings.getDBConnection().createStatement();
                    ResultSet rs = st.executeQuery("SELECT * from stock where `Product Id`= '" + name + "'");

                    while (rs.next()) {
                        proName3TextField.setText(rs.getString(2));
                        proPrice3TextField.setText(rs.getString(4));


                    }




                } catch (Exception e) {
                }
            }
        }

    }//GEN-LAST:event_pro3ComboBoxItemStateChanged

    private void pro4ComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_pro4ComboBoxItemStateChanged
//String[] proName = {null,"Monitor","Sound Box","Mouse","Keyboard","UPS","Mother Board","Processor","RAM 4GB","HArd Disk 500GB","Modem"};
//String[] proPrice = {null,"7800","17800","800","1800","3300","12000","9800","5600","10000","1500"};
//if(evt.getStateChange() == ItemEvent.SELECTED){
//    proName4TextField.setText( proName[pro4ComboBox.getSelectedIndex()]);
//proPrice4TextField.setText( proPrice[pro4ComboBox.getSelectedIndex()]);
//
//
//        }        // TODO add your handling code here:

        if (evt.getStateChange() == ItemEvent.SELECTED) {
            // int index = pro1ComboBox.getSelectedIndex();
            String name = (String) pro4ComboBox.getSelectedItem();
            //JOptionPane.showMessageDialog(null, index, name, JOptionPane.ERROR_MESSAGE);
            if (name == "None") {
                proName4TextField.setText("");
                proPrice4TextField.setText("");

            } else {
                try {
                    Connection con = DBConnection.getDBConnection();
                    Statement st = con.createStatement();
                    ResultSet rs = st.executeQuery("SELECT * from stock where `Product Id`= '" + name + "'");

                    while (rs.next()) {
                        proName4TextField.setText(rs.getString(2));
                        proPrice4TextField.setText(rs.getString(4));


                    }




                } catch (Exception e) {
                }
            }
        }


    }//GEN-LAST:event_pro4ComboBoxItemStateChanged

    private void pro5ComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_pro5ComboBoxItemStateChanged
//String[] proName = {null,"Monitor","Sound Box","Mouse","Keyboard","UPS","Mother Board","Processor","RAM 4GB","HArd Disk 500GB","Modem"};
//String[] proPrice = {null,"7800","17800","800","1800","3300","12000","9800","5600","10000","1500"};
//if(evt.getStateChange() == ItemEvent.SELECTED){
//    proName5TextField.setText( proName[pro5ComboBox.getSelectedIndex()]);
//proPrice5TextField.setText( proPrice[pro5ComboBox.getSelectedIndex()]);
//
//
//        }        // TODO add your handling code here:

        if (evt.getStateChange() == ItemEvent.SELECTED) {
            // int index = pro1ComboBox.getSelectedIndex();
            String name = (String) pro5ComboBox.getSelectedItem();
            //JOptionPane.showMessageDialog(null, index, name, JOptionPane.ERROR_MESSAGE);
            if (name == "None") {
                proName5TextField.setText("");
                proPrice5TextField.setText("");

            } else {
                try {
                    Connection con = DBConnection.getDBConnection();
                    Statement st = con.createStatement();
                    ResultSet rs = st.executeQuery("SELECT * from stock where `Product Id`= '" + name + "'");

                    while (rs.next()) {
                        proName5TextField.setText(rs.getString(2));
                        proPrice5TextField.setText(rs.getString(4));


                    }




                } catch (Exception e) {
                }
            }
        }


    }//GEN-LAST:event_pro5ComboBoxItemStateChanged

    private void calculatorMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calculatorMenuItemActionPerformed
        try {
            Runtime.getRuntime().exec("calc.exe");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Have an error", "Invalid", JOptionPane.ERROR_MESSAGE);
        }
// TODO add your handling code here:
    }//GEN-LAST:event_calculatorMenuItemActionPerformed

    private void notePadMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_notePadMenuItemActionPerformed
        try {
            Runtime.getRuntime().exec("notepad.exe");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Have an error", "Invalid", JOptionPane.ERROR_MESSAGE);
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_notePadMenuItemActionPerformed

    private void proPrice1TextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_proPrice1TextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_proPrice1TextFieldActionPerformed

    private void quantity1TextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quantity1TextFieldActionPerformed
// TODO add your handling code here:
    }//GEN-LAST:event_quantity1TextFieldActionPerformed

    private void quantity2TextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quantity2TextFieldActionPerformed
    }//GEN-LAST:event_quantity2TextFieldActionPerformed

    private void quantity3TextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quantity3TextFieldActionPerformed
    }//GEN-LAST:event_quantity3TextFieldActionPerformed

    private void quantity4TextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quantity4TextFieldActionPerformed
    }//GEN-LAST:event_quantity4TextFieldActionPerformed

    private void quantity5TextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quantity5TextFieldActionPerformed
    }//GEN-LAST:event_quantity5TextFieldActionPerformed

    private void withoutVatButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_withoutVatButtonActionPerformed

        String totalAmount1String = totalAmount1TextField.getText();
        int totalAmount1 = Integer.parseInt(totalAmount1String);

        String totalAmount2String = totalAmount2TextField.getText();
        int totalAmount2 = Integer.parseInt(totalAmount2String);

        String totalAmount3String = totalAmount3TextField.getText();
        int totalAmount3 = Integer.parseInt(totalAmount3String);


        String totalAmount4String = totalAmount4TextField.getText();
        int totalAmount4 = Integer.parseInt(totalAmount4String);


        String totalAmount5String = totalAmount5TextField.getText();
        int totalAmount5 = Integer.parseInt(totalAmount5String);


        int totalAmountWothoutVat = totalAmount1 + totalAmount2 + totalAmount3 + totalAmount4 + totalAmount5;

        withoutVatTextField.setText(String.valueOf(totalAmountWothoutVat));
        // TODO add your handling code here:
    }//GEN-LAST:event_withoutVatButtonActionPerformed

    private void vatButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vatButtonActionPerformed

        String withoutVatString = withoutVatTextField.getText();
        int withoutVat = Integer.parseInt(withoutVatString);
        double vat = withoutVat * 0.25;
        vatTextField.setText(String.valueOf(vat));

        // TODO add your handling code here:
    }//GEN-LAST:event_vatButtonActionPerformed

    private void withVatButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_withVatButtonActionPerformed
        String withoutVatString = withoutVatTextField.getText();
        double withoutVat = Double.parseDouble(withoutVatString);

        String vatString = vatTextField.getText();
        double vat = Double.parseDouble(vatString);

        double withVat = withoutVat - vat;
        withVatTextField.setText(String.valueOf(withVat));         // TODO add your handling code here:
    }//GEN-LAST:event_withVatButtonActionPerformed

    private void newButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newButtonActionPerformed
        this.setVisible(false);
        returnSaleProductFrame f2 = new returnSaleProductFrame();
        f2.setVisible(true);        // TODO add your handling code here:
    }//GEN-LAST:event_newButtonActionPerformed

    private void showRecieptButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showRecieptButtonActionPerformed
        // TODO add your handling code here:
         recieptIF1 re1 = new recieptIF1();
        jDesktopPane1.add(re1);
        re1.setVisible(true);
    }//GEN-LAST:event_showRecieptButtonActionPerformed

    private void vatTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vatTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_vatTextFieldActionPerformed

    private void findButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_findButtonActionPerformed
        String checkMemo = checkMemoTextField.getText();
        try {

            Connection con = DBConnection.getDBConnection();
            Statement st = con.createStatement();

            try {
                ResultSet rso = st.executeQuery("SELECT * from sale_return where memoNo='" + checkMemoTextField.getText() + "'");
                int count = 0;
                if(rso.next()) {
                    count++;
                    customerNameTextField.setText(rso.getString(3));
                    JOptionPane.showMessageDialog(null, "The Memo No. is Valid.", "Success", JOptionPane.INFORMATION_MESSAGE);
                    //JOptionPane.showMessageDialog(null, "" +rso.getString(1)+"            "+rso.getString(2)+"              "+rso.getString(3)+"\n", "Message", JOptionPane.INFORMATION_MESSAGE);
               
                }
                if (count == 0) {
                    JOptionPane.showMessageDialog(null, "The Memo No. is not Valid", "Failed", JOptionPane.INFORMATION_MESSAGE);
                }


            } catch (Exception r) {
                JOptionPane.showMessageDialog(null, "No Data found", "Message", JOptionPane.INFORMATION_MESSAGE);
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex.toString());
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_findButtonActionPerformed

    private void popupMenu1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_popupMenu1ActionPerformed
        JOptionPane.showMessageDialog(null, "No Data found", "Message", JOptionPane.INFORMATION_MESSAGE);
        // TODO add your handling code here:
    }//GEN-LAST:event_popupMenu1ActionPerformed

    private void backHomeMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backHomeMenuItemActionPerformed
        this.dispose();
        HomePage h2 = new HomePage();
        h2.setVisible(true);


        // TODO add your handling code here:
}//GEN-LAST:event_backHomeMenuItemActionPerformed

    private void saveUpdateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveUpdateButtonActionPerformed
        String memoString = memoTextField.getText();
        String customerNameString = customerNameTextField.getText();
        String[] productId = {(String) pro1ComboBox.getSelectedItem(), (String) pro2ComboBox.getSelectedItem(), (String) pro3ComboBox.getSelectedItem(), (String) pro4ComboBox.getSelectedItem(), (String) pro5ComboBox.getSelectedItem()};

        String[] productName = {proName1TextField.getText(), proName2TextField.getText(), proName3TextField.getText(), proName4TextField.getText(), proName5TextField.getText()};
        String[] productPrice = {proPrice1TextField.getText(), proPrice2TextField.getText(), proPrice3TextField.getText(), proPrice4TextField.getText(), proPrice5TextField.getText()};

        String[] quantity = {quantity1TextField.getText(), quantity2TextField.getText(), quantity3TextField.getText(), quantity4TextField.getText(), quantity5TextField.getText()};

        if (customerNameString.equals("")) {
            JOptionPane.showMessageDialog(null, "Fill up the Customer Name.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        if ("None".equals(productId[0]) && "None".equals(productId[1])&& "None".equals(productId[2])&& "None".equals(productId[3])&& "None".equals(productId[4])) {
            JOptionPane.showMessageDialog(null, "At least 1one product must be choosen.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        for (int i = 0; i < 5; i++) {

            if (!"None".equals(productId[i]) && "".equals(quantity[i])) {
                JOptionPane.showMessageDialog(null, "Fill up the Product ID and quantity.", "Error", JOptionPane.ERROR_MESSAGE);
                return;

            }
        }

        try {
            Connection con = DBConnection.getDBConnection();
            Statement st = con.createStatement();
            try {


                for (int i = 0; i < 5; i++) {
                    if (!"None".equals(productId[i]) && !"".equals(quantity[i])) {

                        String str = "insert into return_sale (memoNo,customerName,productId,productName,productPrice,quantity,amount) values(?,?,?,?,?,?,?)";

                        PreparedStatement pso = con.prepareStatement(str);

                        pso.setString(1, memoString);
                        pso.setString(2, customerNameString);
                        pso.setString(3, productId[i]);
                        pso.setString(4, productName[i]);
                        pso.setString(5, productPrice[i]);
                        pso.setString(6, quantity[i]);
                        String amount = String.valueOf(Integer.parseInt(productPrice[i])* Integer.parseInt(quantity[i])); 
                     
                        pso.setString(7, amount);



                        pso.executeUpdate();
                    }

                }
                con.close();
                JOptionPane.showMessageDialog(null, " Return Sale Product Details Database successfully updated", "Success", JOptionPane.INFORMATION_MESSAGE);


            } catch (Exception x) {
                JOptionPane.showMessageDialog(null, "Error,Unable to perform database operation", "Error", JOptionPane.ERROR_MESSAGE);
            }//inner try catch closed
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Error on database connection, Cannot perform database operation", "Error", JOptionPane.ERROR_MESSAGE);
        }//outer try catch closed
        //actionPerformed() closed



        //stock report


        try {
            Connection con = DBConnection.getDBConnection();
            Statement st = con.createStatement();
            try {

                for (int k = 0; k < 5; k++) {
                    if (!"None".equals(productId[k]) && !"".equals(quantity[k])) {
                        String str = "select QuantityInStock from stock where `Product Id` like'" + productId[k] + "'";
                        ResultSet rs = st.executeQuery(str);
                        rs.next();
                        int prevQuantity = Integer.parseInt(rs.getString(1));

                        int newQuantity = prevQuantity + Integer.parseInt(quantity[k]);

                        String newQuantityString = String.valueOf(newQuantity);
                        String str2 = "update stock set QuantityInStock= '" + newQuantityString + "' where `Product Id`='" + productId[k] + "'";
                        st.executeUpdate(str2);

                    }
                }
                // JOptionPane.showMessageDialog(null, "Database successfully updated", "Success", JOptionPane.INFORMATION_MESSAGE);
                con.close();

            } catch (Exception x) {
                JOptionPane.showMessageDialog(null, "Error,Unable to perform database operation", "Error", JOptionPane.ERROR_MESSAGE);
            }//inner try catch closed
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Error on database connection, Cannot perform database operation", "Error", JOptionPane.ERROR_MESSAGE);
        }//outer try catch closed
        //actionPerformed() closed





// memo Reciept
        try {
            Connection con = DBConnection.getDBConnection();
            Statement st = con.createStatement();
            try {


                for (int i = 0; i < 5; i++) {
                    if (!"None".equals(productId[i]) && !"".equals(quantity[i])) {

                        String str = "insert into memoreciept(memoNo,customerName,productId,productName,productPrice,quantity) values(?,?,?,?,?,?)";

                        PreparedStatement pso = con.prepareStatement(str);

                        pso.setString(1, memoString);
                        pso.setString(2, customerNameString);
                        pso.setString(3, productId[i]);
                        pso.setString(4, productName[i]);
                        pso.setString(5, productPrice[i]);
                        pso.setString(6, quantity[i]);



                        pso.executeUpdate();
                    }

                }
                con.close();
                JOptionPane.showMessageDialog(null, " Sale Product Details Database successfully updated", "Success", JOptionPane.INFORMATION_MESSAGE);


            } catch (Exception x) {
                JOptionPane.showMessageDialog(null, "Error,Unable to perform database operation", "Error", JOptionPane.ERROR_MESSAGE);
            }//inner try catch closed
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Error on database connection, Cannot perform database operation", "Error", JOptionPane.ERROR_MESSAGE);
        }//outer try catch closed

        
        
        //end
//        try {
//            Connection con = DBConnection.getDBConnection();
//            Statement st = con.createStatement();
//            try {
//                String memoString = memoTextField.getText();
//                String customerNameString = customerNameTextField.getText();
//                String totalAmountString = withVatTextField.getText();
//                String str = "insert into returnsaleProduct(memoNO,customerName,totalAmount) values(?,?,?)";
//                PreparedStatement pso = con.prepareStatement(str);
//
//                pso.setString(1, memoString);
//                pso.setString(2, customerNameString);
//                pso.setString(3, totalAmountString);
//                pso.executeUpdate();
//                JOptionPane.showMessageDialog(null, " Return Sale Product Database successfully updated", "Success", JOptionPane.INFORMATION_MESSAGE);
//
//
//            } catch (Exception x) {
//                JOptionPane.showMessageDialog(null, "Error,Unable to perform database operation", "Error", JOptionPane.ERROR_MESSAGE);
//            }//inner try catch closed
//        } catch (Exception ex) {
//            JOptionPane.showMessageDialog(null, "Error on database connection, Cannot perform database operation", "Error", JOptionPane.ERROR_MESSAGE);
//        }//outer try catch closed
//        //actionPerformed() closed
//
//        // memo Reciept
//        try {
//            Connection connect = DBConnection.getDBConnection();
//            Statement st = connect.createStatement();
//            try {
//                String memoString = memoTextField.getText();
//                String customerNameString = customerNameTextField.getText();
//                String tAWithoutVatString = withoutVatTextField.getText();
//                String vatString = vatTextField.getText();
//                String tAWithVatString = withVatTextField.getText();
//
//
//                String str = "insert into MemoReciept(memoNo,customerName,totalAmountWithoutVat,vat,totalAmountWithVat) values(?,?,?,?,?)";
//                PreparedStatement pso = connect.prepareStatement(str);
//                pso.setString(1, memoString);
//                pso.setString(2, customerNameString);
//                pso.setString(3, tAWithoutVatString);
//                pso.setString(4, vatString);
//                pso.setString(5, tAWithVatString);
//
//
//                pso.executeUpdate();
//                JOptionPane.showMessageDialog(null, "Reciept Database successfully updated", "Success", JOptionPane.INFORMATION_MESSAGE);
//
//                connect.close();
//            } catch (Exception x) {
//                JOptionPane.showMessageDialog(null, "Error,Unable to perform database operation", "Error", JOptionPane.ERROR_MESSAGE);
//            }//inner try catch closed
//        } catch (Exception ex) {
//            JOptionPane.showMessageDialog(null, "Error on database connection, Cannot perform database operation", "Error", JOptionPane.ERROR_MESSAGE);
//        }//outer try catch closed
//        //actionPerformed() closed


    }//GEN-LAST:event_saveUpdateButtonActionPerformed

    private void customerNameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_customerNameTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_customerNameTextFieldActionPerformed

    private void quantity1TextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_quantity1TextFieldKeyReleased
        // TODO add your handling code here:
        int quantity = Integer.parseInt(quantity1TextField.getText());
        int amount = Integer.parseInt(proPrice1TextField.getText()) * quantity;
        totalAmount1TextField.setText(String.valueOf(amount));

    }//GEN-LAST:event_quantity1TextFieldKeyReleased

    private void quantity2TextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_quantity2TextFieldKeyReleased
        // TODO add your handling code here:
        int quantity = Integer.parseInt(quantity2TextField.getText());
        int amount = Integer.parseInt(proPrice2TextField.getText()) * quantity;
        totalAmount2TextField.setText(String.valueOf(amount));

    }//GEN-LAST:event_quantity2TextFieldKeyReleased

    private void quantity3TextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_quantity3TextFieldKeyReleased
        // TODO add your handling code here:
        int quantity = Integer.parseInt(quantity3TextField.getText());
        int amount = Integer.parseInt(proPrice3TextField.getText()) * quantity;
        totalAmount3TextField.setText(String.valueOf(amount));
    }//GEN-LAST:event_quantity3TextFieldKeyReleased

    private void quantity4TextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_quantity4TextFieldKeyReleased
        // TODO add your handling code here:
        int quantity = Integer.parseInt(quantity4TextField.getText());
        int amount = Integer.parseInt(proPrice4TextField.getText()) * quantity;
        totalAmount4TextField.setText(String.valueOf(amount));
    }//GEN-LAST:event_quantity4TextFieldKeyReleased

    private void quantity5TextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_quantity5TextFieldKeyReleased
        // TODO add your handling code here:
        int quantity = Integer.parseInt(quantity5TextField.getText());
        int amount = Integer.parseInt(proPrice5TextField.getText()) * quantity;
        totalAmount5TextField.setText(String.valueOf(amount));
    }//GEN-LAST:event_quantity5TextFieldKeyReleased
    private void LoadUserames() {
        String name;
        try {
            Connection con = DBConnection.getDBConnection();
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery("select * from stock");

            //  userComboBox.removeAllItems();
            pro1ComboBox.removeAllItems();

            pro2ComboBox.removeAllItems();

            pro3ComboBox.removeAllItems();
            pro4ComboBox.removeAllItems();
            pro5ComboBox.removeAllItems();

            pro1ComboBox.addItem("None");
            pro2ComboBox.addItem("None");
            pro3ComboBox.addItem("None");
            pro4ComboBox.addItem("None");
            pro5ComboBox.addItem("None");



            while (rs.next()) {
                name = rs.getString(1);
                //if (!(name.equalsIgnoreCase("Admin"))) {
                pro1ComboBox.addItem(name);
                pro2ComboBox.addItem(name);
                pro3ComboBox.addItem(name);
                pro4ComboBox.addItem(name);
                pro5ComboBox.addItem(name);
                // }
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Error while loading users list, Closing window" + ex.toString());
            this.dispose();
        }//try catch clsoed
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new saleProductFrame().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem aboutMenuItem;
    private javax.swing.JMenuItem backHomeMenuItem;
    private javax.swing.JMenuItem backMenuItem;
    private javax.swing.JMenuItem calculatorMenuItem;
    private javax.swing.JTextField checkMemoTextField;
    private javax.swing.JTextField customerNameTextField;
    private javax.swing.JTextField dateTextField;
    private javax.swing.JMenuItem exitMenuItem;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JButton findButton;
    private javax.swing.JMenu helpMenu;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JTextField memoTextField;
    private javax.swing.JButton newButton;
    private javax.swing.JMenuItem notePadMenuItem;
    private java.awt.PopupMenu popupMenu1;
    private javax.swing.JComboBox pro1ComboBox;
    private javax.swing.JComboBox pro2ComboBox;
    private javax.swing.JComboBox pro3ComboBox;
    private javax.swing.JComboBox pro4ComboBox;
    private javax.swing.JComboBox pro5ComboBox;
    private javax.swing.JTextField proName1TextField;
    private javax.swing.JTextField proName2TextField;
    private javax.swing.JTextField proName3TextField;
    private javax.swing.JTextField proName4TextField;
    private javax.swing.JTextField proName5TextField;
    private javax.swing.JTextField proPrice1TextField;
    private javax.swing.JTextField proPrice2TextField;
    private javax.swing.JTextField proPrice3TextField;
    private javax.swing.JTextField proPrice4TextField;
    private javax.swing.JTextField proPrice5TextField;
    private javax.swing.JTextField quantity1TextField;
    private javax.swing.JTextField quantity2TextField;
    private javax.swing.JTextField quantity3TextField;
    private javax.swing.JTextField quantity4TextField;
    private javax.swing.JTextField quantity5TextField;
    private javax.swing.JButton saveUpdateButton;
    private javax.swing.JTextField serialNoTextField1;
    private javax.swing.JTextField serialNoTextField2;
    private javax.swing.JTextField serialNoTextField3;
    private javax.swing.JTextField serialNoTextField4;
    private javax.swing.JTextField serialNoTextField5;
    private javax.swing.JButton showRecieptButton;
    private javax.swing.JMenu toolsMenu;
    private javax.swing.JTextField totalAmount1TextField;
    private javax.swing.JTextField totalAmount2TextField;
    private javax.swing.JTextField totalAmount3TextField;
    private javax.swing.JTextField totalAmount4TextField;
    private javax.swing.JTextField totalAmount5TextField;
    private javax.swing.JButton vatButton;
    private javax.swing.JTextField vatTextField;
    private javax.swing.JButton withVatButton;
    private javax.swing.JTextField withVatTextField;
    private javax.swing.JButton withoutVatButton;
    private javax.swing.JTextField withoutVatTextField;
    // End of variables declaration//GEN-END:variables

    private void deletereciept() {
               try {
            Connection con = DBConnection.getDBConnection();
            Statement st = con.createStatement();
            String Type;
            try {
                //int value = JOptionPane.showConfirmDialog(null, "Are you want to delete this Item from stock?", "Confirm Dialog", JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE);

                //if(value == JOptionPane.YES_OPTION){
                String sql = "delete from memoreciept ";

                st.executeUpdate(sql);



                //JOptionPane.showMessageDialog(null, "Database successfully updated", "Success", JOptionPane.INFORMATION_MESSAGE);

                //  }



            } catch (Exception x) {
                JOptionPane.showMessageDialog(null, "Error,Unable to perform database operatio", "Error", JOptionPane.ERROR_MESSAGE);
            }//inner try catch closed
        } catch (Exception ex1) {
            JOptionPane.showMessageDialog(null, "Error on database connection, Cannot perform database operation", "Error", JOptionPane.ERROR_MESSAGE);
        }//outer try catch closed
    }
}
